name: Security Scan

on:
  schedule:
    # 毎週月曜日午前9時（JST = UTC 0:00）
    - cron: '0 0 * * 1'
  workflow_dispatch:  # 手動実行
  push:
    branches: [main]

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Safety (Python)
        run: pip install safety
      
      - name: Scan Python dependencies
        run: |
          cd backend
          pip install -r requirements.txt
          safety check --json > ../security-reports/python-vulnerabilities.json || true
          safety check || true
      
      - name: Scan npm dependencies (Frontend)
        run: |
          cd frontend
          npm audit --json > ../security-reports/npm-frontend-vulnerabilities.json || true
          npm audit || true
      
      - name: Scan npm dependencies (Root)
        run: |
          npm audit --json > security-reports/npm-root-vulnerabilities.json || true
          npm audit || true
      
      - name: Upload vulnerability reports
        uses: actions/upload-artifact@v5
        with:
          name: vulnerability-reports
          path: security-reports/
          retention-days: 90

  code-security-scan:
    name: Code Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - name: Install Bandit
        run: pip install bandit
      
      - name: Run Bandit (Python security)
        run: |
          cd backend
          bandit -r . -f json -o ../security-reports/bandit-report.json || true
          bandit -r . -ll || true
      
      - name: Upload Bandit report
        uses: actions/upload-artifact@v5
        with:
          name: bandit-report
          path: security-reports/bandit-report.json
          retention-days: 90

  docker-image-scan:
    name: Docker Image Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build backend image
        run: docker build -t aica-sys-backend:scan backend/
      
      - name: Build frontend image
        run: docker build -t aica-sys-frontend:scan frontend/
      
      - name: Run Trivy scan (Backend)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'aica-sys-backend:scan'
          format: 'sarif'
          output: 'trivy-backend-results.sarif'
      
      - name: Run Trivy scan (Frontend)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'aica-sys-frontend:scan'
          format: 'sarif'
          output: 'trivy-frontend-results.sarif'
      
      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-backend-results.sarif'

  secret-scan:
    name: Secret Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD

  security-audit:
    name: Security Audit Summary
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-security-scan, docker-image-scan, secret-scan]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download all reports
        uses: actions/download-artifact@v3
        with:
          path: security-reports/
      
      - name: Generate security summary
        run: |
          echo "# Security Scan Summary" > security-summary.md
          echo "" >> security-summary.md
          echo "**Scan Date**: $(date -Iseconds)" >> security-summary.md
          echo "" >> security-summary.md
          echo "## Results" >> security-summary.md
          echo "- Dependency Scan: ${{ needs.dependency-scan.result }}" >> security-summary.md
          echo "- Code Security Scan: ${{ needs.code-security-scan.result }}" >> security-summary.md
          echo "- Docker Image Scan: ${{ needs.docker-image-scan.result }}" >> security-summary.md
          echo "- Secret Scan: ${{ needs.secret-scan.result }}" >> security-summary.md
      
      - name: Upload security summary
        uses: actions/upload-artifact@v5
        with:
          name: security-summary
          path: security-summary.md
          retention-days: 90
      
      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('security-summary.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
