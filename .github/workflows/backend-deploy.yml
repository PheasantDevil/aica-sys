name: Deploy Backend to GCP Cloud Functions

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - 'shared/**'
  pull_request:
    branches: [main]
    paths:
      - 'backend/**'
      - 'shared/**'

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linting
        working-directory: ./backend
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests
        working-directory: ./backend
        run: |
          pip install pytest pytest-cov
          pytest --cov=. --cov-report=xml

  deploy-backend:
    needs: test-backend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authenticate to Google Cloud
        run: gcloud auth activate-service-account --key-file=${{ secrets.GCP_SA_KEY }}

      - name: Configure gcloud
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set compute/region asia-northeast1

      - name: Deploy to Cloud Functions
        working-directory: ./backend
        run: |
          gcloud functions deploy aica-sys-backend \
            --runtime python311 \
            --trigger-http \
            --allow-unauthenticated \
            --source . \
            --entry-point main \
            --memory 512MB \
            --timeout 540s \
            --set-env-vars="GOOGLE_AI_API_KEY=${{ secrets.GOOGLE_AI_API_KEY }},OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }},GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }},DATABASE_URL=${{ secrets.DATABASE_URL }},REDIS_URL=${{ secrets.REDIS_URL }},QDRANT_URL=${{ secrets.QDRANT_URL }},QDRANT_API_KEY=${{ secrets.QDRANT_API_KEY }},JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }},ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}"

      - name: Comment deployment URL
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('ðŸš€ Backend deployment successful!')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: 'ðŸš€ Backend deployment successful!\n\nâœ… Backend deployed to GCP Cloud Functions\nðŸ”— API URL: https://asia-northeast1-${{ secrets.GCP_PROJECT_ID }}.cloudfunctions.net/aica-sys-backend\n\nðŸ“Š Backend build completed successfully!'
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: 'ðŸš€ Backend deployment successful!\n\nâœ… Backend deployed to GCP Cloud Functions\nðŸ”— API URL: https://asia-northeast1-${{ secrets.GCP_PROJECT_ID }}.cloudfunctions.net/aica-sys-backend\n\nðŸ“Š Backend build completed successfully!'
              });
            }
